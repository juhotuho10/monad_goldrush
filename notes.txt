x    get current
x    get goal

x    all nodes [][]
x    unknown nodes []

x    curent node
    closest node 
x    goal node 

x    path to closes = []

    while current node != goal
        get new unknown
        calc new unknown distance to goal
        append to all new and unknown
        check which unknown closest to goal
        update closest node
        path how to get to closest node using all nodes (hard. A star?)
        get to closest node (hard)
        remove closest node from unknown
        update current node

    ------------------------------------------------------------------------------------------------------------------------------------

    Dataclass
    node:
        coords (x, y)
        dist to goal
        surrounding nodes [(x,y), (x,y)]

    ------------------------------------------------------------------------------------------------------------------------------------

    find path to closest(target, current_node, current_path):
        get surrounding
        surrounding not in current path
        if target in surrounding:
            current_path += target
            return current_path

        for coords in surrounding:
            new_node = all nodes [coords]
            final path = find path to closest(target, new current, current_path + new current_node)

        return final path

    ------------------------------------------------------------------------------------------------------------------------------------

    direction to the next block (current coords, next coords):
        return the direction needed (0, 90, 180, 270)


    ------------------------------------------------------------------------------------------------------------------------------------

    if direction != target dir:
        ratate
    move forward

